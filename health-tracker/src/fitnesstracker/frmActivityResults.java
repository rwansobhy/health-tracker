/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fitnesstracker;

import java.awt.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

/**
 *
 * @author LENOVO
 */
public class frmActivityResults extends javax.swing.JFrame {

    // creating object for each activity 
    Running a1 = new Running();
    Swimming a2 = new Swimming();
    Strength_training a3 = new Strength_training();
    Kick_boxing a4 = new Kick_boxing();

    double totalCaloriess = 0;
    double totalheatRATE = 0;

    /**
     * Creates new form frmActivityResults
     */
    public frmActivityResults() {
        initComponents();

        setLocationRelativeTo(null); // centering the window screen
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        calories = new javax.swing.JLabel();
        heartbeats = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        totalcalories = new javax.swing.JLabel();
        totalheartbeats = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ranking = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fitness Tracker");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Activity Data"));
        jPanel1.setToolTipText("");

        calories.setText("New calories burnt : 0");

        heartbeats.setText("Your new heart rate is : 0                                         beat/minute");

        jButton1.setText("Get Data");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(177, 177, 177))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(calories, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(heartbeats, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(calories)
                .addGap(18, 18, 18)
                .addComponent(heartbeats)
                .addGap(44, 44, 44)
                .addComponent(jButton1)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Total For Activities"));

        jButton2.setText("Show Results");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("RESULTS:");

        totalcalories.setText("Total Calories: 0");

        totalheartbeats.setText("Average Heart Beats: 0                                                 beat/minute");

        ranking.setColumns(20);
        ranking.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        ranking.setRows(5);
        jScrollPane1.setViewportView(ranking);

        jLabel2.setText("ACTIVITIES RANKING:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(totalcalories, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(totalheartbeats, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalcalories)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(totalheartbeats)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    DataGetter dg;

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        dg = new DataGetter(this, true);
        dg.setVisible(true);

        switch (DataGetter.atvty) {
            case "Swimming":
                a2.swimmigCounter++;
                a2.setTime(DataGetter.tm);
                a2.setCalories_burnt(a2);
                a2.print_sumofCalories();
                a2.setHeartRate_increase(a2);
                a2.setNewHeartRate(a2.getNewHeartRate());
                calories.setText("New calories burnt :" + a2.newCaloriesburnet);
                heartbeats.setText("Your new heart rate is : " + a2.getNewHeartRate());
                break;
            case "Running":
                a1.runningCounter++;
                a1.setTime(DataGetter.tm);
                a1.setCalories_burnt(a1);
                a1.print_sumofCalories();
                a1.setHeartRate_increase(a1);
                a1.setNewHeartRate(a1.getNewHeartRate());
                calories.setText("New calories burnt :" + a1.newCaloriesburnet);
                heartbeats.setText("Your new heart rate is : " + a1.getNewHeartRate());
                break;
            case "Kick Boxing":
                a4.kickboxingCounter++;
                a4.setTime(DataGetter.tm);
                a4.setCalories_burnt(a4);
                a4.print_sumofCalories();
                a4.setHeartRate_increase(a4);
                a4.setNewHeartRate(a4.getNewHeartRate());
                calories.setText("New calories burnt :" + a4.newCaloriesburnet);
                heartbeats.setText("Your new heart rate is : " + a4.getNewHeartRate());
                break;
            case "Strength Training":
                a3.strengthTRAININGCounter++;
                a3.setTime(DataGetter.tm);
                a3.setCalories_burnt(a3);
                a3.print_sumofCalories();
                a3.setHeartRate_increase(a3);
                a3.setNewHeartRate(a3.getNewHeartRate());
                calories.setText("New calories burnt :" + a3.newCaloriesburnet);
                heartbeats.setText("Your new heart rate is : " + a3.getNewHeartRate());
                break;
        }

        dg.dispose();

        totalCaloriess = a1.runningCaloriesSum + a2.swimmingCalorieSum + a3.strength_trainingCaloriesSum + a4.kick_boxingCaloriesSum;
        System.out.println("totalcalories :" + totalCaloriess);
        totalheatRATE = (a1.heartrateRunning_sum + a2.heartrateSwimming_Sum + a3.heartrateStrength_Sum + a4.heartrateKick_Sum)/(a1.runningCounter+a2.swimmigCounter+a3.strengthTRAININGCounter+a4.kickboxingCounter);
        System.out.println("total heart rate per minute :" + totalheatRATE);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

//        double[] caloriesSorted = new double[]{a1.runningCaloriesSum, a2.swimmingCalorieSum, a3.strength_trainingCaloriesSum, a4.kick_boxingCaloriesSum};
////                    System.out.println("Integer array before sorting : " + Arrays.toString(caloriesSorted)); 
////                    System.out.println("sorting array in descending order"); Arrays.sort(caloriesSorted, Collections.reverseOrder()); 
////                    System.out.println("array after sorted in reverse order: " + Arrays.toString(caloriesSorted));
//        Arrays.sort(caloriesSorted);
//
//        for (int q = caloriesSorted.length - 1; q > -1; q--) {
////                            if(runningCaloriesSum==strengthCaloriesSum && runningHeartSum<strengthHeartSum){
//            if (a1.runningCaloriesSum != 0) {
//                if (caloriesSorted[q] == a1.runningCaloriesSum) {
//                    ranking.append("Running Calories: " + a1.heartrateRunning_sum);
//                    ranking.append("\n");
//                }
//            }
//            if (a2.swimmingCalorieSum != 0) {
//                if (caloriesSorted[q] == a2.swimmingCalorieSum) {
//                    ranking.append("Swimming Calories: " + a2.swimmingCalorieSum);
//                    ranking.append("\n");
//                }
//            }
//            if (a3.strength_trainingCaloriesSum != 0) {
//                if (caloriesSorted[q] == a3.strength_trainingCaloriesSum) {
//                    ranking.append("strength training Calories: " + a3.strength_trainingCaloriesSum);
//                    ranking.append("\n");
//                }
//            }
//            if (a4.kick_boxingCaloriesSum != 0) {
//                if (caloriesSorted[q] == a4.kick_boxingCaloriesSum) {
//                    ranking.append("kickboxing Calories: " + a4.kick_boxingCaloriesSum);
//                    ranking.append("\n");
//                }
//            }
//        }
        double[] soretedArray = {a1.runningCaloriesSum, a2.swimmingCalorieSum, a4.kick_boxingCaloriesSum, a3.strength_trainingCaloriesSum};
        Arrays.sort(soretedArray);
        for (int q = soretedArray.length - 1; q > -1; q--) {
//                            if(runningCaloriesSum==strengthCaloriesSum && runningHeartSum<strengthHeartSum){
            if (a1.runningCaloriesSum != 0) {
                if (soretedArray[q] == a1.runningCaloriesSum) {
                    ranking.append("Running        " + a1.runningCaloriesSum);
                    ranking.append("\n");
                }
            }
            if (a2.swimmingCalorieSum != 0) {
                if (soretedArray[q] == a2.swimmingCalorieSum) {
                    ranking.append("Swimming      " + a2.swimmingCalorieSum);
                    ranking.append("\n");
                }
            }
            if (a4.kick_boxingCaloriesSum != 0) {
                if (soretedArray[q] == a4.kick_boxingCaloriesSum) {
                    ranking.append("kick boxing   " + a4.kick_boxingCaloriesSum);
                    ranking.append("\n");
                }
            }
            if (a3.strength_trainingCaloriesSum != 0) {
                if (soretedArray[q] == a3.strength_trainingCaloriesSum) {
                   ranking.append("strength      " + a3.strength_trainingCaloriesSum);
                   ranking.append("\n");
                }
            }
        }
    

        totalcalories.setText("Total Calories: " + totalCaloriess);
       totalheartbeats.setText("Total Heart Beats: " + totalheatRATE);
    }//GEN-LAST:event_jButton2ActionPerformed
    //totalcalories.setText("Total Calories: " + totalCaloriess);
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmActivityResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmActivityResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmActivityResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmActivityResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmActivityResults().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel calories;
    private javax.swing.JLabel heartbeats;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea ranking;
    private javax.swing.JLabel totalcalories;
    private javax.swing.JLabel totalheartbeats;
    // End of variables declaration//GEN-END:variables
}
